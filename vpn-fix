#!/usr/bin/env bash
set -e

host_whitelist=($(cat whitelist.txt | grep -v ".*#.*" | grep -v "^$"))
ip_routes=()
vpn_nameserver=($(nmcli device show ppp0 | grep "IP4.ADDRESS" | awk '{print $2}' | cut -d'/' -f1))

echo -e "VPN nameserver found: \e[35m$vpn_nameserver\e[0m"

echo -e "Querying..."

for host in ${host_whitelist[*]}
do
  if [[ $host =~ ^[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+(|\/[0-9]+)$ ]]; then
    ip_routes+=($host)
  else
    ip_list=($(dig $vpn_nameserver +short $host))
    for ip in ${ip_list[*]}
    do
      if [[ $ip =~ ^([[:digit:]]{1,3}\.){3}[[:digit:]]{1,3}$ ]]; then
        echo -e "Host \e[35m$host\e[0m resolves to \e[32m$ip\e[0m"
        ip_routes+=($ip)
      fi
    done
    [ ${#ip_list[@]} -eq "0" ] && echo -e "\e[91mCould not resolve host \e[35m$host\e[0m"
  fi
done

existing_routes=($(route -n | grep -v '1.1.1.1' | grep '255\.255\.255\.255.*ppp0' | awk '{print $1}'))

echo -e "\e[31mDeleting\e[0m existing routes..."
for address in ${existing_routes[*]}
do
  route del -net $address netmask 255.255.255.255 dev ppp0 || true
done

echo -e "\e[32mAdding\e[0m new routes..."
for address in ${ip_routes[*]}
do
  if [[ $address =~ ^[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+\/[0-9]+$ ]]; then
    route add -net $addresss dev ppp0
  else
    route add -net $address netmask 255.255.255.255 dev ppp0 > /dev/null 2>&1 || true
  fi
done

echo "Done."
